# Original Author: Johannes Sauer <joh.sauer(at)gmail(dot)com>
# Contributer: Danilo Bargen <aur at dbrgn dot ch>
# Maintainer: Jordan Johnston <johnstonljordan(at)gmail(dot)com>

pkgname=cloudcompare-git
pkgver=2.6.2.r761.gecd5c88
pkgrel=1
pkgdesc="A 3D point cloud (and triangular mesh) processing software"
arch=('i686' 'x86_64')
url="http://www.danielgm.net/cc/"
license=('GPL2')
depends=('qt5-base' 'glu' 'mesa' 'gdal' 'cgal' 'pcl' 'eigen' 'openmp' 'ffmpeg')
makedepends=('git' 'cmake' 'pcl' 'gdal' 'cgal' 'pcl' 'eigen' 'openmp' 'ffmpeg')
optdepends=()
source=("git+https://github.com/cloudcompare/trunk"
        "git+https://github.com/cloudcompare/PoissonRecon"
        "git+https://github.com/cloudcompare/normals_Hough"
        "git+https://github.com/jlblancoc/nanoflann"
        "Poission_No_MmemoryUsage_call.patch"
	"CloudCompare.desktop"
	"ccViewer.desktop")
md5sums=('SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'e6d7e438c446737df3b2bb4648b902ac'
         'd95632ae15914a35d24257ff5bf80d02'
         '59ce07ede0a408071d9afceca0c48803')


pkgver() {
  cd "$srcdir/trunk"
  git describe --long | sed -r 's/^v//;s/([^-]*-g)/r\1/;s/-/./g'
}

build() {

  # Delete these files, if they exist. (* from previous local builds)

  rm -Rf "$srcdir/trunk/plugins/qPoissonRecon/PoissonReconLib"
  rm -Rf "$srcdir/PoissonReconLib"
  rm -Rf "$srcdir/trunk/plugins/qHoughNormals/include"

  # rename and copy PoissionReconLib into source tree, so that we can build the plugin.
  # copy the normal_hough into source tree, add nanoflann header into build

  mv -f "$srcdir/PoissonRecon" "$srcdir/PoissonReconLib"
  cp -Rf "$srcdir/PoissonReconLib" "$srcdir/trunk/plugins/qPoissonRecon"
  cp -Rf "$srcdir/normals_Hough" "$srcdir/trunk/plugins/qHoughNormals"
  mkdir "$srcdir/trunk/plugins/qHoughNormals/include"
  cp -f "$srcdir/nanoflann/include/nanoflann.hpp" "$srcdir/trunk/plugins/qHoughNormals/include/nanoflann.hpp"

  cd "$srcdir/trunk"

  patch -Np1 -i "$srcdir/Poission_No_MmemoryUsage_call.patch"
 
  [[ -d build ]] && rm -r build
  mkdir -p build && cd build

  # KINECT support 
  #
  #		  -DINSTALL_QKINECT_PLUGIN=ON
  #		  -DLIBFREENECT_INCLUDE_DIR="/usr/include"
  #		  -DLIBFREENECT_LIBRARY_FILE="/usr/lib/libfreenect.so"
  #
  # * Disabled: I can't get it's dependencies working on Archlinux
  #
  # 3DMOUSE support
  #
  #		  -DOPTION_SUPPORT_3DCONNEXION_DEVICES=ON \
  #
  # * Disabled: I don't have access to this h/w.
  #
  # LIBLAS support
  #
  #		  -DOPTION_USE_LIBLAS=ON \
  #		  -DLIBLAS_INCLUDE_DIR=/usr/include \
  #		  -DLIBLAS_RELEASE_LIBRARY_FILE=/usr/lib/liblas.so \
  #
  # * can be enabled, but requires liblas/liblas-git in AUR. I use this with ICC build, locally.
  #
  # LIBE57 lidar format 
  # 
  #   		  -DOPTION_USE_LIBE57=ON \
  #		  -DLIBE57_INSTALL_DIR=  \
  #
  # * Disabled: not packaged for Archlinux, can't pull it in during build like CC plugins.
  #
  # Don't enable / Disabled for good reasons; 
  #
  #		  -DINSTALL_QGMMREG_PLUGIN=ON \
  #		  -DOPTION_GL_QUAD_BUFFER_SUPPORT=ON \
  #		  -DINSTALL_QDUMMY_PLUGIN=ON 
  #
  #  - qGMMREG is set to be reomved from CC
  #  - GL_QUAD_BUFFER_SUPPORT is responisble for the glx crash in Qt-4.7 on Archlinux
  #  - qDUMMY is just an example plugin, no point in enabling it

  cmake .. \
     	  -DCMAKE_BUILD_TYPE=Release \
		  -DCMAKE_INSTALL_PREFIX=/usr \
		  -DBUILD_QPCL_PLUGIN_DOCUMENTATION=ON \
		  -DOPTION_USE_DXF_LIB=ON \
		  -DOPTION_USE_SHAPE_LIB=ON \
		  -DOPTION_USE_GDAL=ON \
		  -DFFMPEG_LIBRARY_DIR=/usr/lib \
		  -DFFMPEG_INCLUDE_DIR=/usr/include \
  		  -DWITH_FFMPEG_SUPPORT=YES \
		  -DCOMPILE_CC_CORE_LIB_WITH_CGAL=ON \
  	          -DINSTALL_QPCL_PLUGIN=ON \
		  -DINSTALL_QSRA_PLUGIN=ON \
		  -DINSTALL_QCSF_PLUGIN=ON \
		  -DINSTALL_QCSV_MATRIX_IO_PLUGIN=ON \
		  -DINSTALL_QPOISSON_RECON_PLUGIN=ON \
  		  -DPOISSON_RECON_WITH_OPEN_MP=ON \
		  -DINSTALL_QHPR_PLUGIN=ON \
		  -DINSTALL_QRANSAC_SD_PLUGIN=ON \
		  -DINSTALL_QBLUR_PLUGIN=ON \
		  -DINSTALL_QEDL_PLUGIN=ON \
		  -DINSTALL_QPCV_PLUGIN=ON \
		  -DINSTALL_QSSAO_PLUGIN=ON \
		  -DINSTALL_QANIMATION_PLUGIN=ON \
		  -DINSTALL_QFACETS_PLUGIN=ON \
		  -DINSTALL_QHPR_PLUGIN=ON \
		  -DEIGEN_ROOT_DIR=/usr/include/eigen3 \
		  -DNANOFLANN_ROOT_DIR="$srcdir/trunk/plugins/qHoughNormals" \
		  -DINSTALL_QHOUGH_NORMALS_PLUGIN=ON \
		  -DINSTALL_QPHOTOSCAN_IO_PLUGIN=ON \
		  -DINSTALL_QGMMREG_PLUGIN=OFF \
		  -DINSTALL_QKINECT_PLUGIN=OFF \
  		  -DOPTION_GL_QUAD_BUFFER_SUPPORT=OFF \
		  -DINSTALL_QDUMMY_PLUGIN=OFF 

  while true; do
    read -p "Do you want to edit the cmake configuration? [y/N]" yn
 	 yn=${yn:-n}
    case $yn in
       [Yy] )	cmake-gui .. 
		  break;;
       [Nn] )		  break;;
#       * ) echo "Please answer y or n.";;
    esac
  done

  make
}

package() {
  cd "$srcdir/trunk/build"
  make DESTDIR="$pkgdir/" install

  # Icons for .desktop files
  mkdir -p "${pkgdir}/usr/share/pixmaps"
  install -D -m 644 "$srcdir/trunk/qCC/images/icon/cc_icon_256.png" "${pkgdir}/usr/share/pixmaps/cc_icon_256.png"
  install -D -m 644 "$srcdir/trunk/qCC/images/icon/cc_viewer_icon_256.png" "${pkgdir}/usr/share/pixmaps/cc_viewer_icon_256.png"

  # Launcher / .desktop files
  mkdir -p "${pkgdir}/usr/share/applications"
  install -D -m 644 "$srcdir/CloudCompare.desktop" "${pkgdir}/usr/share/applications/CloudCompare.desktop"
  install -D -m 644 "$srcdir/ccViewer.desktop" "${pkgdir}/usr/share/applications/ccViewer.desktop"
}
